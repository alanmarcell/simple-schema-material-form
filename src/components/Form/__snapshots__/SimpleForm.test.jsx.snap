// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shallow a 2 TextInput 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <pure(withStateHandlers(SimpleForm))
    onSubmit={[Function]}
>
    <Unknown
        fieldName="test"
    />
    <Unknown
        fieldName="test2"
    />
</pure(withStateHandlers(SimpleForm))>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <Unknown
            doc={
                        Object {
                                    "test": "Type Sample",
                                    "test2": "Type Sample",
                                  }
            }
            fieldName="test"
            label="test"
            onChange={[Function]}
            setDoc={[Function]}
            value="Type Sample"
/>,
          <Unknown
            doc={
                        Object {
                                    "test": "Type Sample",
                                    "test2": "Type Sample",
                                  }
            }
            fieldName="test2"
            label="test2"
            onChange={[Function]}
            setDoc={[Function]}
            value="Type Sample"
/>,
        ],
        <WithStyles(Button)
          onClick={[Function]}
>
          Submit
</WithStyles(Button)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "function",
        "props": Object {
          "children": null,
          "doc": Object {
            "test": "Type Sample",
            "test2": "Type Sample",
          },
          "fieldName": "test",
          "label": "test",
          "onChange": [Function],
          "setDoc": [Function],
          "value": "Type Sample",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "function",
        "props": Object {
          "children": null,
          "doc": Object {
            "test": "Type Sample",
            "test2": "Type Sample",
          },
          "fieldName": "test2",
          "label": "test2",
          "onChange": [Function],
          "setDoc": [Function],
          "value": "Type Sample",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Submit",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Submit",
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <Unknown
              doc={
                            Object {
                                          "test": "Type Sample",
                                          "test2": "Type Sample",
                                        }
              }
              fieldName="test"
              label="test"
              onChange={[Function]}
              setDoc={[Function]}
              value="Type Sample"
/>,
            <Unknown
              doc={
                            Object {
                                          "test": "Type Sample",
                                          "test2": "Type Sample",
                                        }
              }
              fieldName="test2"
              label="test2"
              onChange={[Function]}
              setDoc={[Function]}
              value="Type Sample"
/>,
          ],
          <WithStyles(Button)
            onClick={[Function]}
>
            Submit
</WithStyles(Button)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "function",
          "props": Object {
            "children": null,
            "doc": Object {
              "test": "Type Sample",
              "test2": "Type Sample",
            },
            "fieldName": "test",
            "label": "test",
            "onChange": [Function],
            "setDoc": [Function],
            "value": "Type Sample",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "function",
          "props": Object {
            "children": null,
            "doc": Object {
              "test": "Type Sample",
              "test2": "Type Sample",
            },
            "fieldName": "test2",
            "label": "test2",
            "onChange": [Function],
            "setDoc": [Function],
            "value": "Type Sample",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Submit",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Submit",
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`shallow a TextInput 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <pure(withStateHandlers(SimpleForm))
    onSubmit={[Function]}
>
    <Unknown
        fieldName="test"
    />
</pure(withStateHandlers(SimpleForm))>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <Unknown
            doc={
                        Object {
                                    "test": "Type Sample",
                                  }
            }
            fieldName="test"
            label="test"
            onChange={[Function]}
            setDoc={[Function]}
            value="Type Sample"
/>,
        ],
        <WithStyles(Button)
          onClick={[Function]}
>
          Submit
</WithStyles(Button)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "function",
        "props": Object {
          "children": null,
          "doc": Object {
            "test": "Type Sample",
          },
          "fieldName": "test",
          "label": "test",
          "onChange": [Function],
          "setDoc": [Function],
          "value": "Type Sample",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Submit",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Submit",
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <Unknown
              doc={
                            Object {
                                          "test": "Type Sample",
                                        }
              }
              fieldName="test"
              label="test"
              onChange={[Function]}
              setDoc={[Function]}
              value="Type Sample"
/>,
          ],
          <WithStyles(Button)
            onClick={[Function]}
>
            Submit
</WithStyles(Button)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "function",
          "props": Object {
            "children": null,
            "doc": Object {
              "test": "Type Sample",
            },
            "fieldName": "test",
            "label": "test",
            "onChange": [Function],
            "setDoc": [Function],
            "value": "Type Sample",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Submit",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Submit",
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
