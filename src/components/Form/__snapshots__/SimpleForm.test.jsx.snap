// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shallow a TextInput 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <pure(withStateHandlers(SimpleForm))
    name="World"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <TextField
        label="Type Sample"
        onChange={[Function]}
        required={false}
        select={false}
        value="Type Sample"
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Type Sample",
        "onChange": [Function],
        "required": false,
        "select": false,
        "value": "Type Sample",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <TextField
          label="Type Sample"
          onChange={[Function]}
          required={false}
          select={false}
          value="Type Sample"
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "label": "Type Sample",
          "onChange": [Function],
          "required": false,
          "select": false,
          "value": "Type Sample",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
